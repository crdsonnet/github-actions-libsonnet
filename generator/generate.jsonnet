local a = import 'github.com/crdsonnet/astsonnet/main.libsonnet';
local autils = import 'github.com/crdsonnet/astsonnet/utils.libsonnet';
local d = import 'github.com/jsonnet-libs/docsonnet/doc-util/main.libsonnet';

local docstring =
  a.object.new([
    a.field.new(
      a.string.new('#'),
      a.literal.new(
        std.manifestJsonEx(
          d.package.new(
            'github-actions-libsonnet',
            'github.com/crdsonnet/github-actions-libsonnet',
            'Jsonnet library to create workflows and actions for GitHub Actions.',
            'main.libsonnet',
            'main',
          )
          + d.package.withUsageTemplate(
            'local ga = import "%(import)s"'
          )
          , '  ', '\n'
        ),
      ),
    ),
  ]);

local actionTree = import './action.libsonnet';
local workflowTree = import './workflow.libsonnet';

'// DO NOT EDIT: generated by generator/generate.jsonnet\n'
+ (
  autils.deepMergeObjects(
    [
      docstring,
      actionTree,
      workflowTree,
    ]
  )
).toString()
